2809. 使数组和小于等于 x 的最少时间
给你两个长度相等下标从 0 开始的整数数组 nums1 和 nums2 。每一秒，对于所有下标 0 <= i < nums1.length ，nums1[i] 的值都增加 nums2[i] 。操作 完成后 ，你可以进行如下操作：

选择任一满足 0 <= i < nums1.length 的下标 i ，并使 nums1[i] = 0 。
同时给你一个整数 x 。

请你返回使 nums1 中所有元素之和 小于等于 x 所需要的 最少 时间，如果无法实现，那么返回 -1 。

class Solution {
public:
    int minimumTime(vector<int>& nums1, vector<int>& nums2, int x) {
        int n = nums1.size();
        vector<int> dp(n + 1, 0);
        vector<pair<int, int>> num(n);
        for(int i = 0; i < n; ++i)
            num[i] = {nums2[i], nums1[i]};
        sort(num.begin(), num.end());
        for(int i = 1; i <= n; ++i){
            int b = num[i - 1].first, a = num[i - 1].second;
            for(int j = i; j > 0; --j)
                dp[j] = max(dp[j], dp[j - 1] + j * b + a);
        }
        int sum1 = accumulate(nums1.begin(), nums1.end(), 0);
        int sum2 = accumulate(nums2.begin(), nums2.end(), 0);
        for(int i = 0; i <= n; ++i)
            if(sum2 * i + sum1 - dp[i] <= x)
                return i;
        return -1;
    }
};