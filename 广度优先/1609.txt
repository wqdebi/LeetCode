/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isEvenOddTree(TreeNode* root) {
        queue<TreeNode*> que;
        if(root){
            que.push(root);
        }
        int flag = 1;
        while(!que.empty()){
            int n = que.size();
            int prev = flag ? INT_MIN : INT_MAX;
            while(n){
                auto q = que.front();
                if(q->left)
                    que.push(q->left);
                if(q->right)
                    que.push(q->right);
                que.pop();
                --n;
                if(!flag && (q->val >= prev || q->val % 2 == 1))
                    return false;
                if(flag && (q->val <= prev || q->val % 2 == 0))
                    return false;
                prev = q->val;
            }
            flag ^= 1;
        }
        return true;
    }
};
